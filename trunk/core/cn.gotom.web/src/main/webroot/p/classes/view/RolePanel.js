/*
 * File: classes/view/RolePanel.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Gotom.view.RolePanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.RolePanel',

    id: 'RolePanel',
    layout: {
        type: 'border'
    },
    header: false,
    title: '角色管理',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            id: 'btnNew',
                            iconCls: 'icon-add',
                            text: '新增',
                            listeners: {
                                click: {
                                    fn: me.onBtnNewClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnEdit',
                            iconCls: 'icon-edit',
                            text: '修改',
                            listeners: {
                                click: {
                                    fn: me.onBtnEditClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnDel',
                            iconCls: 'icon-del',
                            text: '删除',
                            listeners: {
                                click: {
                                    fn: me.onBtnDelClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnSave1',
                            iconCls: 'icon-save',
                            text: '保存',
                            listeners: {
                                click: {
                                    fn: me.onBtnSaveClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnRef',
                            iconCls: 'icon-refresh',
                            text: '刷新',
                            listeners: {
                                click: {
                                    fn: me.onBtnRefClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    region: 'west',
                    id: 'RoleGridPanel',
                    width: 250,
                    title: '角色列表',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            id: 'RoleGridName',
                            width: 130,
                            dataIndex: 'name',
                            text: '权限名称'
                        },
                        {
                            xtype: 'numbercolumn',
                            id: 'RoleGridSort',
                            width: 94,
                            dataIndex: 'sort',
                            text: '排列顺序',
                            format: '0,000'
                        }
                    ],
                    viewConfig: {
                        listeners: {
                            itemdblclick: {
                                fn: me.onViewItemDblClick,
                                scope: me
                            }
                        }
                    },
                    selModel: Ext.create('Ext.selection.CheckboxModel', {

                    }),
                    tools: [
                        {
                            xtype: 'tool',
                            type: 'refresh',
                            listeners: {
                                click: {
                                    fn: me.onToolClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    region: 'center',
                    id: 'CenterPanel',
                    layout: {
                        type: 'border'
                    },
                    items: [
                        {
                            xtype: 'form',
                            region: 'north',
                            height: 97,
                            id: 'RoleForm',
                            bodyPadding: 10,
                            title: '编辑角色',
                            items: [
                                {
                                    xtype: 'hiddenfield',
                                    anchor: '100%',
                                    id: 'role.id',
                                    fieldLabel: 'Label',
                                    name: 'role.id'
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    id: 'role.name',
                                    fieldLabel: '权限名称',
                                    name: 'role.name',
                                    allowBlank: false,
                                    enforceMaxLength: false,
                                    maxLength: 50,
                                    minLength: 2
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    id: 'role.sort',
                                    fieldLabel: '排列顺序',
                                    name: 'role.sort'
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                afterlayout: {
                    fn: me.onRolePanelAfterLayout,
                    single: true,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onBtnNewClick: function(button, e, eOpts) {
        this.loadFormData('');
    },

    onBtnEditClick: function(button, e, eOpts) {
        var selected = Ext.getCmp('RoleGridPanel').getSelectionModel().selected;
        var record = selected.items[0];
        if(!Ext.isEmpty(record))
        {
            this.loadFormData(record.data.id);
        }
        else
        {
            Ext.Msg.alert('操作提示','请选择要修改的列!');
        }
    },

    onBtnDelClick: function(button, e, eOpts) {
        this.deleteRole();
    },

    onBtnSaveClick: function(button, e, eOpts) {
        this.saveForm();
    },

    onBtnRefClick: function(button, e, eOpts) {
        this.loadRoleGrid();
        this.loadFormData('');
    },

    onViewItemDblClick: function(dataview, record, item, index, e, eOpts) {
        this.loadFormData(record.data.id);
    },

    onToolClick: function(tool, e, eOpts) {
        this.loadRoleGrid();
    },

    onRolePanelAfterLayout: function(container, layout, eOpts) {
        this.loadRoleGrid();
        this.loadFormData('');
    },

    loadRoleGrid: function() {
        var me = this;
        var wait = Ext.Msg.wait("正在加载......", "操作提示");
        Ext.Ajax.request(
        {
            url : 'Role!list.do',
            method : 'POST',
            //params:{id:ids},  
            success : function(response, options)
            {
                wait.close();
                var result = Ext.JSON.decode(response.responseText); 
                if(result.success)
                {
                    me.bindRoleGrid(result.data);
                }
                else
                {
                    Ext.Msg.alert('信息提示', result.data);
                }
            },
            failure : function(response, options)
            {
                wait.close();
                if(response.status == 200)
                {
                    var result = Ext.JSON.decode(response.responseText);
                    Ext.Msg.alert('信息提示', result.data);
                }
                else
                {
                    Ext.Msg.alert('信息提示', response.responseText);
                }
            }
        });
    },

    bindRoleGrid: function(data) {
        var me = this;
        var roleStore = Ext.create('Ext.data.Store', {
            storeId:'roleStore',
            fields: [
            {
                name: 'id'
            },
            {
                name: 'name'
            },
            {
                name: 'sort'
            }
            ],
            data : data,
            proxy:
            {
                type: 'memory',
                reader:{
                    type: 'json'
                }
            }
        });
        Ext.getCmp('RoleGridPanel').bindStore(roleStore); 
    },

    loadFormData: function(roleId) {
        var me = this;
        var wait = Ext.Msg.wait("正在加载......", "操作提示");
        Ext.Ajax.request(
        {
            url : 'Role.do',
            method : 'POST',
            params:{'role.id':roleId},  
            success : function(response, options)
            {
                wait.close();
                var result = Ext.JSON.decode(response.responseText); 
                if(result.success)
                {
                    me.bindRightTree(result.role.id);
                    Ext.getCmp('role.id').setValue(result.role.id);
                    Ext.getCmp('role.name').setValue(result.role.name);                
                    Ext.getCmp('role.sort').setValue(result.role.sort);  
                }
                else
                {
                    Ext.Msg.alert('信息提示', result.data);
                }
            },
            failure : function(response, options)
            {
                wait.close();
                if(response.status == 200)
                {
                    var result = Ext.JSON.decode(response.responseText);
                    Ext.Msg.alert('信息提示', result.data);
                }
                else
                {
                    Ext.Msg.alert('信息提示', response.responseText);
                }
            }
        });
    },

    bindRightTree: function(roleId) {
        var me = this;
        var myStore = Ext.create("Ext.data.TreeStore",
            {
                defaultRootId : roleId,
                clearOnLoad : true,
                nodeParam : 'role.id',
                fields: [
                {
                    name: 'id'
                },
                {
                    name: 'parentId'
                },
                {
                    name: 'text'
                },
                {
                    name: 'component'
                },
                {
                    name: 'resource'
                },
                {
                    name: 'iconCls'
                },
                {
                    name: 'checked',
                    type: 'boolean'
                }
                ],
                proxy :
                {
                    type : 'ajax',
                    url : 'Role!tree.do'             
                }                      
            });
        var tree = Ext.create('Ext.tree.Panel',
            {
                region: 'center',
                id: 'RoleRightTreePanel',
                title: '角色可访问资源',
                animate : true,
                border : false,
                bodyborder : false,
                lines : true,
                split : true,
                stateful : true,
                collapsible : false,
                frame : false,
                enableDD : true,
                autoScroll : true,
                autoHeight : false,
                rootVisible : false,
                multiSelect : false,
                store:myStore,
                root :
                {
                    expanded : true
                },
                listeners: {
                    itemclick: 
                    {
                        fn: me.onTreeItemClick,
                        scope: me
                    },
                    checkchange: 
                    {
                        fn: me.onTreePanelCheckChange,
                        scope: me
                    }
                },        
                columns : [
                {
                    xtype : 'treecolumn',
                    dataIndex : 'text',
                    text : '菜单名称',
                    sortable : false,
                    flex : 1,
                    width:300,
                    menuDisabled : true
                },
                {
                    xtype : 'gridcolumn',
                    dataIndex : 'iconCls',
                    text : '使用样式'
                },
                {
                    xtype : 'gridcolumn',
                    dataIndex : 'component',
                    width:200,
                    text : '控件或连接'
                },
                {
                    xtype : 'gridcolumn',
                    dataIndex : 'resource',
                    width:200,
                    text : '数据资源'
                }]
            });
        tree.expandAll();
        Ext.getCmp('CenterPanel').remove(1);
        Ext.getCmp('CenterPanel').add(tree);

    },

    saveForm: function() {
        var me = this;
        if (Ext.getCmp('RoleForm').isValid())
        {
            var roleId = Ext.getCmp('role.id').getValue();
            var name = Ext.getCmp('role.name').getValue();                
            var sort = Ext.getCmp('role.sort').getValue();
            var rightIds = [];
            var tree = Ext.getCmp('RoleRightTreePanel');
            var items = tree.getSelectionModel().store.data.items;
            Ext.each(items, function()
            {
                var nd = this;
                if(nd.data.checked)
                {
                    rightIds.push(nd.data.id);
                }
            });
            var wait = Ext.Msg.wait("正在加载......", "操作提示");
            Ext.Ajax.request(
            {
                url : 'Role!save.do',
                method : 'POST',
                params:{
                    'role.id':roleId,
                    'role.name':name,
                    'role.sort':sort,
                    'rightIds':rightIds
                },  
                success : function(response, options)
                {
                    wait.close();
                    var result = Ext.JSON.decode(response.responseText); 
                    if(result.success)
                    {
                        me.loadRoleGrid();
                        me.loadFormData('');
                    }
                    else
                    {
                        Ext.Msg.alert('信息提示', result.data);
                    }
                },
                failure : function(response, options)
                {
                    wait.close();
                    if(response.status == 200)
                    {
                        var result = Ext.JSON.decode(response.responseText);
                        Ext.Msg.alert('信息提示', result.data);
                    }
                    else
                    {
                        Ext.Msg.alert('信息提示', response.responseText);
                    }
                }
            });
        }
    },

    deleteRole: function() {
        var me = this;
        var selected = Ext.getCmp('RoleGridPanel').getSelectionModel().selected;
        var selecteditems = selected.items;
        if (selecteditems.length === 0)
        {
            Ext.Msg.show(
            {
                title : "操作提示",
                msg : "请选择要删除的节点!",
                icon : Ext.Msg.WARNING
            });
            return;
        }
        var ids = [];
        Ext.each(selecteditems, function()
        {
            var nd = this;
            ids.push(nd.data.id);
        });
        Ext.Msg.confirm("警告", "确定要删除吗？", function(button)
        {
            if (button == "yes")
            {
                Ext.Msg.wait("正在执行......", "操作提示");
                Ext.Ajax.request(
                {
                    url : 'Role!remove.do',
                    method : 'POST',
                    params :
                    {
                        'role.id' : ids.join(",")
                    },
                    success : function(response, options)
                    {
                        Ext.Msg.alert("删除提示", "删除成功");
                        me.loadRoleGrid();
                        me.loadFormData('');
                    },
                    failure : function(response, options)
                    {
                        Ext.Msg.alert("删除提示", "删除失败<br/>"+response.responseText);
                    }
                });
            }
        });
    },

    onTreeItemClick: function(dataview, record, item, index, e, eOpts) {
        if(record.data.checked)
        {
            record.set('checked', false);
            this.onTreePanelCheckChange(record,false,eOpts);
        }
        else
        {
            record.set('checked', true);
            this.onTreePanelCheckChange(record,true,eOpts);
        }
    },

    onTreePanelCheckChange: function(node, checked, eOpts) {
        var me = this;
        me.onTreeChildNodesChecked(node,checked);
        me.onTreeParentNodeChecked(node,checked);
    },

    onTreeChildNodesChecked: function(node, checked) {
        var me = this;
        Ext.each(node.childNodes,function(childNode)
        {
            childNode.set('checked', checked);   
            if(childNode.childNodes.length >0)
            {
                me.onTreeChildNodesChecked(childNode,checked);
            }
        });
    },

    onTreeParentNodeChecked: function(node, checked) {
        if(node.parentNode !== null)
        {
            if(node.parentNode.childNodes.length >0)
            {
                var parentCheck = false;
                Ext.each(node.parentNode.childNodes,function(childNode)
                {
                    if(childNode.data.checked)
                    {
                        parentCheck = true;
                    }
                });
                node.parentNode.set('checked', parentCheck);
                this.onTreeParentNodeChecked(node.parentNode,checked);
            }
        }
    }

});
/*
 * File: classes/view/UserPassowrd.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Gotom.view.UserPassowrd', {
    extend: 'Ext.window.Window',
    alias: 'widget.UserPassowrd',

    height: 164,
    width: 400,
    layout: {
        type: 'border'
    },
    closeAction: 'hide',
    title: '修改密码',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    region: 'center',
                    border: false,
                    id: 'PasswordForm',
                    bodyPadding: 10,
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            id: 'passwordFormToolbar',
                            layout: {
                                pack: 'end',
                                padding: 3,
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    iconCls: 'icon-save',
                                    text: '保存',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    items: [
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            id: 'user.password',
                            fieldLabel: '原 密 码',
                            msgTarget: 'side',
                            name: 'password',
                            inputType: 'password',
                            allowBlank: false,
                            blankText: '请输入6位字符以上的密码！',
                            emptyText: '请输入6-25位字符长度的密码',
                            maxLength: 25,
                            maxLengthText: '请输入6-25位字符以上的密码！',
                            minLength: 6,
                            minLengthText: '请输入6-25位字符以上的密码！'
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            id: 'user.newpass',
                            fieldLabel: '新 密 码',
                            msgTarget: 'side',
                            name: 'newpass',
                            inputType: 'password',
                            allowBlank: false,
                            blankText: '请输入6位字符以上的密码！',
                            emptyText: '请输入6-25位字符长度的密码',
                            enforceMaxLength: true,
                            maxLength: 25,
                            maxLengthText: '请输入6-25位字符以上的密码！',
                            minLength: 6,
                            minLengthText: '请输入6-25位字符以上的密码！'
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            confirmPwd: 'user.newpass',
                            id: 'user.newpassCheck',
                            fieldLabel: '确认密码',
                            msgTarget: 'side',
                            name: 'newpassCheck',
                            inputType: 'password',
                            allowBlank: false,
                            vtype: 'password',
                            listeners: {
                                change: {
                                    fn: me.onnewpassCheckChange,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        var me = this;
        var form = Ext.getCmp('PasswordForm');
        if (form.isValid())
        {
            form.submit({
                url : ctxp + '/p/main!password.do',
                method : 'POST',
                waitMsg : '正在保存数据，稍后...',
                success : function(f, action){
                    me.close();
                    form.reset();
                    Ext.Msg.show({
                        title:'操作提示',
                        msg:'保存成功',
                        icon: Ext.Msg.INFO,
                        wait:true,
                        waitConfig:{
                            interval:600,
                            duration:1000,
                            fn:function(){
                                Ext.MessageBox.hide();
                            }},
                            closable:true
                        });
                    },
                    failure : function(f, action)
                    {
                        Ext.Msg.alert({
                            title:'保存失败',
                            msg:action.result.data,
                            icon: Ext.Msg.ERROR,
                            buttons: Ext.Msg.OK
                        });            
                    }
                });
            }
    },

    onnewpassCheckChange: function(field, newValue, oldValue, eOpts) {
        Ext.apply(Ext.form.VTypes, {
            password : function(val, field) {
                if (field.confirmPwd) {
                    var pwd = Ext.getCmp(field.confirmPwd);
                    return (val == pwd.getValue());
                }
                return true;
            },
            passwordText : '两次输入的密码不一致!'
        });
    }

});
/*
 * File: classes/view/Commons.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Gotom.view.Commons', {
    extend: 'Ext.Base',
    alias: 'widget.Commons',

    ctxp: '..',

    ajax: function(config) {
        Ext.Ajax.request(
        {
            url : config.url,
            params : config.params,
            method : 'post',

            callback : function(options, success, response)
            {
                if (success)
                {
                    config.callback(Ext.JSON.decode(response.responseText),options, success, response);// 调用回调函数
                }
                else
                {
                    Ext.Msg.alert('信息提示', response.responseText);
                }
            }
        });
    },

    createTreeStore: function(URL, pid) {
        var store = Ext.create("Ext.data.TreeStore",
            {
                defaultRootId : pid,
                clearOnLoad : true,
                nodeParam : 'id',
                fields: [
                {
                    name: 'id'
                },
                {
                    name: 'sort',
                    type: 'int'
                },
                {
                    name: 'text'
                },
                {
                    name: 'iconCls'
                },
                {
                    name: 'leaf',
                    type: 'boolean'
                },
                {
                    name: 'type'
                },
                {
                    name: 'resource'
                },
                {
                    name: 'component'
                },
                {
                    name: 'parentId'
                }
                ],
                proxy :
                {
                    type : 'ajax',
                    url : URL            
                }
            });
        return store;
    },

    getQueryParam: function(name) {
        var regex = RegExp('[?&]' + name + '=([^&]*)');
        var scriptEls = document.getElementsByTagName('script');
        var path = scriptEls[scriptEls.length - 1].src;
        var match = regex.exec(location.search) || regex.exec(path);
        return match && decodeURIComponent(match[1]);
    },

    addQueryParam: function(url, name, value) {
        var path = url;
        if (value !== null && value.length > 0)
        {
            if (url.indexOf('?') >= 0)
            {
                path = url + '&' + name + '=' + value;
            }
            else
            {
                path = url + '?' + name + '=' + value;
            }
        }
        return path;
    }

});